version: 0.2

phases:
  pre_build:
    commands:
    - echo Logging in to Amazon ECR...
    - aws --version
    - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
    - REPOSITORY_URI=392339816894.dkr.ecr.ap-northeast-1.amazonaws.com/rails-docker
    - REPOSITORY_URI_NGINX=392339816894.dkr.ecr.ap-northeast-1.amazonaws.com/nginx-brotli
    - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
    - echo Build started on `date`
    - echo Building the rails-docker Docker image...
    - docker build -t $REPOSITORY_URI:latest . --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY --build-arg RAILS_ENV=$RAILS_ENV
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    - echo Building the nginx-brotli Docker image...
    - docker build -t $REPOSITORY_URI_NGINX:latest containers/nginx
    - docker tag $REPOSITORY_URI_NGINX:latest $REPOSITORY_URI_NGINX:$IMAGE_TAG
  post_build:
    commands:
    - echo Build completed on `date`
    - echo Pushing the Docker images...
    - docker push $REPOSITORY_URI:latest
    - docker push $REPOSITORY_URI:$IMAGE_TAG
    - docker push $REPOSITORY_URI_NGINX:latest
    - docker push $REPOSITORY_URI_NGINX:$IMAGE_TAG
    - echo Writing image definitions file...
    - printf '[{"name":"rails-docker","imageUri":"%s"}, {"name":"nginx-brotli","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI_NGINX:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json